!function(s){function n(n){for(var e,r,p=n[0],o=n[1],c=n[2],u=0,d=[];u<p.length;u++)r=p[u],l[r]&&d.push(l[r][0]),l[r]=0;for(e in o)Object.prototype.hasOwnProperty.call(o,e)&&(s[e]=o[e]);for(i&&i(n);d.length;)d.shift()();return t.push.apply(t,c||[]),a()}function a(){for(var s,n=0;n<t.length;n++){for(var a=t[n],e=!0,p=1;p<a.length;p++){var o=a[p];0!==l[o]&&(e=!1)}e&&(t.splice(n--,1),s=r(r.s=a[0]))}return s}var e={},l={10:0},t=[];function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return s[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=s,r.c=e,r.d=function(s,n,a){r.o(s,n)||Object.defineProperty(s,n,{enumerable:!0,get:a})},r.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},r.t=function(s,n){if(1&n&&(s=r(s)),8&n)return s;if(4&n&&"object"==typeof s&&s&&s.__esModule)return s;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:s}),2&n&&"string"!=typeof s)for(var e in s)r.d(a,e,function(n){return s[n]}.bind(null,e));return a},r.n=function(s){var n=s&&s.__esModule?function(){return s.default}:function(){return s};return r.d(n,"a",n),n},r.o=function(s,n){return Object.prototype.hasOwnProperty.call(s,n)},r.p="";var p=window.webpackJsonp=window.webpackJsonp||[],o=p.push.bind(p);p.push=n,p=p.slice();for(var c=0;c<p.length;c++)n(p[c]);var i=o;t.push(["./src/pages/notes/notes.js",0]),a()}({"./src/pages/notes/markdown.md":function(s,n){s.exports="<h2 id=git>git</h2> <blockquote> <p>git 项目提交过远程仓库，把某个不需要同步到平远端的文件夹添加到<code>.gitignore</code>后再次提交代码，还会读取到本地变化并提交远端记录的解决办法，运行如下指令清楚本地git缓存即可。</p> </blockquote> <pre><code class=base>    git rm -r --cache <span class=hljs-string>[目录]</span></code></pre> <h2 id=javascript>JavaScript</h2> <blockquote> <p>字符串分组处理方法</p> </blockquote> <pre><code class=javascript>function stringExecByGroup(<span class=hljs-built_in>string</span>, <span class=hljs-built_in>count</span>, callback) {\n    var floatIndex = <span class=hljs-number>0</span>;\n    var <span class=hljs-keyword>times</span> = <span class=hljs-number>0</span>;\n\n    <span class=hljs-keyword>while</span> (floatIndex &lt;= <span class=hljs-built_in>string</span>.<span class=hljs-built_in>length</span>) {\n        callback(<span class=hljs-built_in>string</span>.slice(floatIndex, floatIndex + <span class=hljs-built_in>count</span>), ++<span class=hljs-keyword>times</span>)\n        floatIndex += <span class=hljs-built_in>count</span>\n    }\n}</code></pre> <blockquote> <p>序列化url参数</p> <pre><code class=javascript></code></pre> </blockquote> <p>/<em>解析url参数</em>/ function parseParams(url) { var data; var res;</p> <pre><code>url = url || window.location.href;\nres = {};\n<span class=hljs-keyword>data</span> = url.split(<span class=hljs-string>'?'</span>);\n<span class=hljs-keyword>if</span> (<span class=hljs-keyword>data</span>.length === <span class=hljs-number>1</span>) {\n    <span class=hljs-keyword>return</span> <span class=hljs-literal>null</span>;\n}\n<span class=hljs-keyword>data</span> = <span class=hljs-keyword>data</span>.pop();\n<span class=hljs-keyword>data</span> = <span class=hljs-keyword>data</span>.split(<span class=hljs-string>'&amp;'</span>);\n\n<span class=hljs-keyword>for</span> (<span class=hljs-keyword>var</span> i = <span class=hljs-number>0</span>, l = <span class=hljs-keyword>data</span>.length; i &lt; l; i++) {\n    <span class=hljs-keyword>var</span> tmp = <span class=hljs-keyword>data</span>[i].split(<span class=hljs-string>'='</span>);\n    <span class=hljs-keyword>if</span> (tmp.length === <span class=hljs-number>2</span>) {\n        res[tmp[<span class=hljs-number>0</span>]] = tmp[<span class=hljs-number>1</span>];\n    }\n}\n<span class=hljs-keyword>return</span> res;</code></pre><p>}</p> <pre><code></code></pre>"},"./src/pages/notes/notes.js":function(s,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e,l=a("./src/assets/js/initial.js"),t=(e=l)&&e.__esModule?e:{default:e},r=a("./src/assets/js/Utils.js");a("./src/components/ArticleRead.js");var p=a("./src/data.json"),o=(0,t.default)();n.default=new o({el:"#base-panel__window",name:"markdown",data:function(){return{html:a("./src/pages/notes/markdown.md")}},computed:{title:function(){return(0,r.getArticleInfo)(window.location.href,p)[0]}},mounted:function(){document.body.classList.remove("loading")}})}});