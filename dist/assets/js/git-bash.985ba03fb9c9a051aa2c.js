!function(e){function n(n){for(var s,a,c=n[0],i=n[1],l=n[2],u=0,d=[];u<c.length;u++)a=c[u],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&d.push(r[a][0]),r[a]=0;for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(e[s]=i[s]);for(p&&p(n);d.length;)d.shift()();return o.push.apply(o,l||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],s=!0,c=1;c<t.length;c++){var i=t[c];0!==r[i]&&(s=!1)}s&&(o.splice(n--,1),e=a(a.s=t[0]))}return e}var s={},r={5:0},o=[];function a(n){if(s[n])return s[n].exports;var t=s[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=e,a.c=s,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)a.d(t,s,function(n){return e[n]}.bind(null,s));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="";var c=window.webpackJsonp=window.webpackJsonp||[],i=c.push.bind(c);c.push=n,c=c.slice();for(var l=0;l<c.length;l++)n(c[l]);var p=i;o.push(["./src/pages/git-bash/git-bash.js",0]),t()}({"./src/pages/git-bash/git-bash.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s,r=t("./src/assets/js/initial.js"),o=(s=r)&&s.__esModule?s:{default:s},a=t("./src/assets/js/Utils.js");t("./src/components/ArticleRead.js");var c=t("./src/data.json"),i=(0,o.default)();n.default=new i({el:"#base-panel__window",name:"markdown",data:function(){return{html:t("./src/pages/git-bash/markdown.md")}},computed:{title:function(){return(0,a.getArticleInfo)(window.location.href,c)[0]}},mounted:function(){document.body.classList.remove("loading")}})},"./src/pages/git-bash/markdown.md":function(e,n){e.exports="<h3 id=文件被添加忽略列表，但是每次变动仍会被提交>文件被添加忽略列表，但是每次变动仍会被提交</h3> <blockquote> <p> git 项目提交过远程仓库，把某个不需要同步到平远端的文件夹添加到<code>.gitignore</code>后再次提交代码，还会读取到本地变化并提交远端记录的解决办法，运行如下指令清楚本地git缓存即可。</p> </blockquote> <pre><code class=base>    git rm -r <span class=hljs-comment>--cache [目录]</span></code></pre> <h3 id=git分支管理---分支备注>git分支管理 - 分支备注</h3> <blockquote> <p>git管理项目，会创建太多的分支以增加不同的功能和特性到主线程序。团队协作或者个人项目管理，分支的名字如果不能直观体现分支的作用，后者时间过久总会有忘记分支作用的时候。分支的描述信息能很好的记录分支的信息，起到备忘作用。</p> </blockquote> <pre><code class=bash>    <span class=hljs-comment># 增加描述信息</span>\n    git <span class=hljs-built_in>config</span>.<span class=hljs-keyword>branch.branchName.description </span><span class=hljs-string>'子系统分支，增加异地协助认证功能'</span>\n    <span class=hljs-comment># 信息查看</span>\n    <span class=hljs-comment># 通过 git-br 包快速查看</span>\n    git <span class=hljs-keyword>br\n</span>    <span class=hljs-comment># output</span>\n    <span class=hljs-comment># branchName description</span></code></pre> "}});